
name: Maven Package

on:
   workflow_dispatch:
   # push:
   #    branches: ["*"]
env:
  IMAGE_NAME: ${{ github.repository }}
  AUTHOR_NAME: Sas
  AUTHOR_EMAIL: basu.saswata@gmail.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Sas-homelab
  SUPPLIER_URL: www.sas-homelab.com
  SUPPLIER_EMAIL: basu.saswata@gmail.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  SCANNER_ARGS: |
      --exclude-files \.github/workflows/.*
      --exclude-lines ^\s+with\s+imageTag\s*=.*$ 
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
       fetch-depth: 0
    
  
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: install valint
      uses: scribe-security/action-installer@master
      
    - name: Generate Source BOM and attestation -valint cmd
      run: |
        curl -L -o opa https://github.com/open-policy-agent/opa/releases/download/v0.11.0/opa_linux_amd64
        ./opa run
        valint help bom
        valint help evidence
        valint help verify
        valint bom git:. -o statement -f --components commits,files
        valint bom git:. -o attest -f  --components commits,files
        #valint verify git:. -i attest --rule git/no-commit-to-main@v1
        ls
    - name: Verify Source BOM and attestation -valint cmd
      run: |
        valint verify git:. -i attest --bundle https://github.com/basusaswata/scribe_sample_policy.git  --git-branch main --rule git/no-commit-to-main@v1
        ls
    - name: Secret Scanner
      uses: secret-scanner/action@0.0.2
      with:
          detect-secret-additional-args: ${{ env.SCANNER_ARGS }}    
          
    # - name: Generate Source BOM -valint cmd
    #   run: |
    #     ls /home/runner/.cache/valint
    #     echo ${{ github.sha }}
    #     cat /home/runner/.cache/valint/sha1-${{ github.sha }}.bom.statement.json
    #     cat /home/runner/.cache/valint/sha1-${{ github.sha }}.bom.sig.json
  
    - name: Upload Source BOM 
      uses: actions/upload-artifact@v3
      with:
         name: Source BOM
         path: /home/runner/.cache/valint/sha1-${{ github.sha }}.bom.statement.json
    - name: Upload verification evidence 
      uses: actions/upload-artifact@v3
      with:
         name: Source BOM verification report
         path: /home/runner/.cache/valint/sha1-${{ github.sha }}.sarif.json
         
    # - name: Generate Source BOM
    #   uses: scribe-security/action-bom@master
    #   with:
    #     target: 'git:.'
    #     env: all-env
    #     scribe-enable: true
    #     #components: packages,files,dep
    #     product-key: "sas-customer-service"
    #     scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
    #     format: statement-slsa
    #     product-version: "version_prod_sprint37_01"
    #     author-name: $AUTHOR_NAME
    #     author-email: $AUTHOR_EMAIL
    #     author-phone: $AUTHOR_PHONE
    #     supplier-name: $SUPPLIER_NAME
    #     supplier-url: $SUPPLIER_URL
    #     supplier-email: $SUPPLIER_EMAIL 
    #     supplier-phone: $SUPPLIER_PHONE
    #     verbose: 2
    # - name: display slsa
    #   run: |
    #      cat scribe/valint/${{ github.sha }}.provenance.statement.json
    # - name: Upload Source SLSA statement
    #   uses: actions/upload-artifact@v3
    #   with:
    #      name: Source SLSA
    #      path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
         
    # - name: Verify Source BOM
    #   uses: scribe-security/action-verify@master
    #   with:
    #     target: 'git:.'
    #     #input-format: statement
    #     verbose: 2
    #     #rule: git/no-commit-to-main@v1,git/coding-permissions@v1,git/evidence-exists@v1
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Software composition analysis
      uses: dependency-check/Dependency-Check_Action@main
      env:
         JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
          project: 'customer-service'
          path: '.'
          format: 'JSON'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          #args: >
            #--failOnCVSS 7
            #--enableRetired
      
    - name: Upload SCA result results
      uses: actions/upload-artifact@master
      with:
           name: Source composition analysis report
           path: ${{github.workspace}}/reports   
           
    - name: Generate SLSA evidence for SCA
      run: |
        #ls ${{github.workspace}}/reports 
        mkdir scaevidence
        valint evidence ${{github.workspace}}/reports/dependency-check-report.json  -o statement --parser dependencycheck --output-directory ./scaevidence --output-file ./scaevidence/depcheck.json
        #ls
        #ls scaevidence
        #ls ${{github.workspace}}
        #ls /home/runner/.cache/valint
        #cat ./scaevidence/depcheck.json
        
    - name: Verify SLSA evidence for SCA
      run: |
        valint verify ./scaevidence/depcheck.json -i attest-generic --bundle https://github.com/basusaswata/scribe_sample_policy.git  --git-branch main --rule sca/scaevidencecheck@v1
       
    - name: Upload slsa evidence for SCA
      uses: actions/upload-artifact@v3
      with:
         name: SCA SLSA evidence
         path: ./scaevidence/depcheck.json
  
      
    # - name: list few things
    #   run: ls
      
    # - name: current directory
    #   run: pwd

          
    - name: Build and push Docker image
      run: | 
         docker build . -t ${{ github.repository }}
         docker login --username basu.saswata@gmail.com --password ${{ secrets.DOCKPAS }}
         docker push ${{ github.repository }}
         

    - name: Generate signed SBOM for docker image
      uses: scribe-security/action-bom@master
      with:
        target: 'docker:${{ github.repository }}'
        scribe-enable: true
        product-key: "sas-customer-service"
        scribe-client-secret:  ${{ secrets.CLIENT_SECRET }}
        format: attest
        product-version: "version_prod_sprint37_01"
        force: true
        env: all-env
        author-name: $AUTHOR_NAME
        author-email: $AUTHOR_EMAIL
        author-phone: $AUTHOR_PHONE
        supplier-name: $SUPPLIER_NAME
        supplier-url: $SUPPLIER_URL
        supplier-email: $SUPPLIER_EMAIL 
        supplier-phone: $SUPPLIER_PHONE
        
    - name: Generate SLSA provenance statement
      id: valint_slsa_statement
      uses: scribe-security/action-bom@master
      with:
         target: 'docker:${{ github.repository }}'
         format: statement-slsa
         
    - name: Attest SLSA provenance statement
      uses: scribe-security/action-bom@master
      with:
         target: 'docker:${{ github.repository }}'
         format: attest-slsa    
         
      
    # - name: List environment variables
    #   run: env
   
    # - name: list scribe materials
    #   run: ls ./scribe/valint 
      
    # - name: list scribe materials
    #   run: FILE_PATH=$(find . -name "*provenance.sig*")
      
    # - name: export to env
    #   run: echo "MY_VAR=$FILE_PATH" >> $GITHUB_ENV
     
    # - name: list scribe materials
    #   run: ls .
    # - name: list scribe materials
    #   run: echo ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
      
    - name: Upload SLSA provenance statement
      uses: actions/upload-artifact@v3
      with:
         name: provenance
         path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
         
    - name: List environment variables
      run: env
