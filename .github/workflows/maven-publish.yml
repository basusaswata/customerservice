
name: Maven Package

on:
   workflow_dispatch:
   # push:
   #    branches: ["*"]
env:
  IMAGE_NAME: ${{ github.repository }}
  AUTHOR_NAME: Sas
  AUTHOR_EMAIL: basu.saswata@gmail.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Sas-homelab
  SUPPLIER_URL: www.sas-homelab.com
  SUPPLIER_EMAIL: basu.saswata@gmail.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  PRODUCT_VERSION: 3
  SCANNER_ARGS: |
      --exclude-files \.github/workflows/.*
      --exclude-lines ^\s+with\s+imageTag\s*=.*$ 
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
       fetch-depth: 0
    
  
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Secret Scanner
      uses: secret-scanner/action@0.0.2
      with:
          detect-secret-additional-args: ${{ env.SCANNER_ARGS }}        
    - name: install valint
      uses: scribe-security/action-installer@master
      
  
         

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Software composition analysis
      uses: dependency-check/Dependency-Check_Action@main
      env:
         JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
          project: 'customer-service'
          path: '.'
          format: 'JSON'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          #args: >
            #--failOnCVSS 7
            #--enableRetired
      
    - name: Upload SCA result results
      uses: actions/upload-artifact@master
      with:
           name: Source composition analysis report
           path: ${{github.workspace}}/reports   
           
    - name: Generate SLSA evidence for SCA
      run: |
        #ls ${{github.workspace}}/reports 
        mkdir scaevidence
        valint evidence ${{github.workspace}}/reports/dependency-check-report.json -E -o statement --parser dependencycheck --output-directory ./scaevidence --output-file ./scaevidence/depcheck.json --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version ${{env.PRODUCT_VERSION}}
        #ls
        #ls scaevidence
        #ls ${{github.workspace}}
        #ls /home/runner/.cache/valint
        #cat ./scaevidence/depcheck.json
        
    - name: Verify SLSA evidence for SCA
      run: |
        git clone https://github.com/basusaswata/scribe_sample_policy.git  
        ls
        ./opa eval -i ./scaevidence/depcheck.json -d ./scribe_sample_policy/v1/sca/scaevidencecheck.rego 'data.verify.deny'
        #./opa run ./scaevidence/depcheck.json ./scribe_sample_policy/v1/sca/scaevidencecheck.rego  
        
    - name: Upload slsa evidence for SCA
      uses: actions/upload-artifact@v3
      with:
         name: SCA SLSA evidence
         path: ./scaevidence/depcheck.json
  

          
    - name: Build and push Docker image
      run: | 
         docker build . -t ${{ github.repository }}
         docker login --username basu.saswata@gmail.com --password ${{ secrets.DOCKPAS }}
         docker push ${{ github.repository }}

    - name: Generate signed SBOM for docker image
      run: |     
        mkdir containerbom
        valint bom docker:${{ github.repository }} -E -o attest-slsa -f  --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version ${{env.PRODUCT_VERSION}} --output-directory ./containerbom --output-file ./containerbom/${{ github.repository }}.bom.sig.json
        valint bom docker:${{ github.repository }} -E -o statement-slsa -f  --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version ${{env.PRODUCT_VERSION}} --output-directory ./containerbom --output-file ./containerbom/${{ github.repository }}.bom.statement.json
        FILE_PATH=$(find ./containerbom -type f -name '*statement*' | head -n 1)
        echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
        ls ./containerbom
        
    - name: Generate Source BOM and attestation -valint cmd
      run: |
        curl -L -o opa https://github.com/open-policy-agent/opa/releases/download/v0.11.0/opa_linux_amd64
        chmod 755 ./opa
        ./opa run
        #valint help bom
        #valint help evidence
        #valint help verify
        valint bom git:. -E -o statement -f --components commits,files --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version ${{env.PRODUCT_VERSION}}
        valint bom git:. -E -o statement-slsa -f --components commits,files --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version  ${{env.PRODUCT_VERSION}}
        valint bom git:. -E -o attest -f  --components commits,files --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version  ${{env.PRODUCT_VERSION}}
        valint bom git:. -E -o attest-slsa -f  --components commits,files --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version  ${{env.PRODUCT_VERSION}}
        
        #valint verify git:. -i attest --rule git/no-commit-to-main@v1
        #ls
    - name: Verify Source BOM and attestation -valint cmd
      run: |
        valint verify git:. -E -i attest-slsa --bundle https://github.com/basusaswata/scribe_sample_policy.git  --git-branch main --rule git/no-commit-to-main@v1 --product-key sas-customer-service --scribe.client-secret  ${{ secrets.CLIENT_SECRET }} --product-version ${{env.PRODUCT_VERSION}}
        #ls


  
    - name: Upload Source BOM 
      uses: actions/upload-artifact@v3
      with:
         name: Source BOM
         path: /home/runner/.cache/valint/sha1-${{ github.sha }}.bom.statement.json
         
    - name: Upload Source Provenance 
      uses: actions/upload-artifact@v3
      with:
         name: Source SLSA
         path: /home/runner/.cache/valint/sha1-${{ github.sha }}.provenance.statement.json
    - name: Upload verification evidence 
      uses: actions/upload-artifact@v3
      with:
         name: Source BOM verification report
         path: /home/runner/.cache/valint/sha1-${{ github.sha }}.sarif.json
         
    - name: Upload Container BOM 
      uses: actions/upload-artifact@v3
      with:
         name: Container BOM
         path: ${{ env.FILE_PATH }}
      
    # - name: Upload SLSA provenance statement
    #   uses: actions/upload-artifact@v3
    #   with:
    #      name: provenance
    #      path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
         
    # - name: List environment variables
    #   run: env
