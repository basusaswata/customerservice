
name: Maven Package

on:
   workflow_dispatch:
   push:
      branches: ["*"]
env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  AUTHOR_NAME: Sas
  AUTHOR_EMAIL: basu.saswata@gmail.com
  AUTHOR_PHONE: 111-1111-11
  SUPPLIER_NAME: Sas-homelab
  SUPPLIER_URL: www.sas-homelab.com
  SUPPLIER_EMAIL: basu.saswata@gmail.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Secret Scanner
      uses: secret-scanner/action@0.0.2
     
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
 
    
    - name: Generate signed SBOM for repo content
      uses: scribe-security/action-bom@master
      with:
        target: 'git:.'
        scribe-enable: true
        components: packages,files,dep
        product-key: "sas-customer-service"
        scribe-client-secret: 'c2NyaWJlLWh1Yi10ZWFtMjg2LXNSQ3FXT2dqMXRVZ05WQ0o5S2U5blRObngzeHBCSVZZOml5SjFjanplVVFhNDZ5S2oybDJmZUFxaXpyWU9UQ0xNRkJZMGNTOXBBSXAzVW1icFZtTXREcjFNUElOdA=='
        format: attest
        product-version: "version_prod_sprint37_01"
        author-name: $AUTHOR_NAME
        author-email: $AUTHOR_EMAIL
        author-phone: $AUTHOR_PHONE
        supplier-name: $SUPPLIER_NAME
        supplier-url: $SUPPLIER_URL
        supplier-email: $SUPPLIER_EMAIL 
        supplier-phone: $SUPPLIER_PHONE
        code-event: ${{github.event_name}}
   
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Software composition analysis
      uses: dependency-check/Dependency-Check_Action@main
      env:
         JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
          project: 'customer-service'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          #args: >
            #--failOnCVSS 7
            #--enableRetired
      
    - name: Upload SCA result results
      uses: actions/upload-artifact@master
      with:
           name: Depcheck report
           path: ${{github.workspace}}/reports   
           
    - name: Secret Scanner
      uses: secret-scanner/action@0.0.2       
      with: 
         baseline-file: './.secrets.baseline'
         exclude_files_path: .github/workflows/
      
    # - name: list few things
    #   run: ls
      
    # - name: current directory
    #   run: pwd
      
    - name: Build the Docker image
      run: docker build . -t customer-service:${{ github.sha }}

    - name: Generate signed SBOM for docker image
      uses: scribe-security/action-bom@master
      with:
        target: 'docker:customer-service:${{ github.sha }}'
        scribe-enable: true
        product-key: "sas-customer-service"
        scribe-client-secret: 'c2NyaWJlLWh1Yi10ZWFtMjg2LXNSQ3FXT2dqMXRVZ05WQ0o5S2U5blRObngzeHBCSVZZOml5SjFjanplVVFhNDZ5S2oybDJmZUFxaXpyWU9UQ0xNRkJZMGNTOXBBSXAzVW1icFZtTXREcjFNUElOdA=='
        format: attest
        product-version: "version_prod_sprint37_01"
        force: true
        author-name: $AUTHOR_NAME
        author-email: $AUTHOR_EMAIL
        author-phone: $AUTHOR_PHONE
        supplier-name: $SUPPLIER_NAME
        supplier-url: $SUPPLIER_URL
        supplier-email: $SUPPLIER_EMAIL 
        supplier-phone: $SUPPLIER_PHONE
        
    - name: Generate SLSA provenance statement
      id: valint_slsa_statement
      uses: scribe-security/action-bom@master
      with:
         target: 'docker:customer-service:${{ github.sha }}'
         format: statement-slsa
         
    - name: Attest SLSA provenance statement
      uses: scribe-security/action-bom@master
      with:
         target: 'docker:customer-service:${{ github.sha }}'
         format: attest-slsa    
         
      
    # - name: List environment variables
    #   run: env
   
    # - name: list scribe materials
    #   run: ls ./scribe/valint 
      
    # - name: list scribe materials
    #   run: FILE_PATH=$(find . -name "*provenance.sig*")
      
    # - name: export to env
    #   run: echo "MY_VAR=$FILE_PATH" >> $GITHUB_ENV
     
    # - name: list scribe materials
    #   run: ls .
    # - name: list scribe materials
    #   run: echo ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
      
    - name: Upload SLSA provenance statement
      uses: actions/upload-artifact@v3
      with:
         name: provenance
         path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
         
    - name: List environment variables
      run: env
